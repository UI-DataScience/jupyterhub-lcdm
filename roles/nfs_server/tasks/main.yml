---
- name: install nfs pakcages
  yum: name=nfs-utils,libnfsidmap state=latest

- name: stop nfs
  service: name=nfs state=stopped

- name: stop rpcbind
  service: name=rpcbind state=stopped

- name: unmount existing volumes
  shell: umount /mnt/volume || true

- name: create a ext4 filesystem on /dev/vdb
  filesystem: fstype=ext4 dev=/dev/vdb

- name: create mount directory
  file: name=/mnt/volume state=directory

- name: mount storage volume
  mount: name=/mnt/volume src=/dev/vdb fstype=ext4 state=mounted

- name: bind mount to export directory
  mount: name=/export src=/mnt/volume fstype=none opts=bind state=mounted

- name: install /etc/exports
  template: src=exports dest=/etc/exports mode=0644

- name: start rpcbind
  service: name=rpcbind state=started

- name: create /mnt/volume/home
  file: path=/mnt/volume/home state=directory

- name: stat home directories if they exist
  stat: path=/mnt/volume/home/{{ item }}
  with_items:
  - "{{ jupyterhub_admins|lower }}"
  - "{{ jupyterhub_users|lower }}"
  register: home_exists

- name: create home directories
  file: path={{ item.item }} state=directory group=100 owner=1000 recurse=yes
  when: item.stat.exists == false
  with_items:
  - "{{ home_exists.results }}"
  tags:
  - add_users

- name: stat shared directory if it exists
  stat: path={{ item }}
  register: shared_exists
  with_items:
  - /mnt/volume/shared

- name: create shared directory
  file: path={{ item.item }} state=directory group=100 owner=1000 recurse=yes
  when: item.stat.exists == false
  with_items:
  - "{{ shared_exists.results }}"

- name: start nfs-server
  service: name=nfs state=started

